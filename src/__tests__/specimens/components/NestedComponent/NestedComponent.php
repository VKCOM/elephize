<?php
/* NOTICE: autogenerated file; Do not edit by hand */
namespace specimens\components\NestedComponent;
use VK\Elephize\Builtins\RenderableComponent;
use VK\Elephize\Builtins\Stdlib;
use VK\Elephize\Builtins\ReactContext;
use VK\Elephize\Builtins\ReactContextSynthetic;

class NestedComponent extends RenderableComponent {
    /**
     * @var NestedComponent $_mod
     */
    private static $_mod;
    public static function getInstance(): NestedComponent {
        if (!self::$_mod) {
            self::$_mod = new NestedComponent();
        }
        return self::$_mod;
    }

    private function __construct() {
    }

    /**
     * @param mixed[] $props
     * @param mixed[] $children
     * @return ?string
     */
    public function render(array $props, array $children) {
        $anon_3b2ed12 = [0];
        $count = (float) $anon_3b2ed12[0];
        $arr = [1, 2, 3];
        return \VK\Elephize\Builtins\IntrinsicElement::get("div")->render(
            [],
            [
                \specimens\components\DummyComponent\DummyComponent::getInstance()->render(["count" => $count], []),
                Stdlib::arrayMap1(
                    $arr,
                    /* anon_b4f3ee1 */ function ($val) use ($count) {
                        return \specimens\components\DummyComponent\DummyComponent::getInstance()->render(
                            ["key" => $val, "count" => $count],
                            []
                        );
                    }
                ),
            ]
        );
    }
}
