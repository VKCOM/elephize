<?php
/* NOTICE: autogenerated file; Do not edit by hand */
namespace specimens\components\ReactContextProvider;
use VK\Elephize\Builtins\RenderableComponent;
use VK\Elephize\Builtins\Stdlib;
use VK\Elephize\Builtins\ReactContext;
use VK\Elephize\Builtins\ReactContextSynthetic;

class ReactContextProvider extends RenderableComponent {
    /**
     * @var ReactContextProvider $_mod
     */
    private static $_mod;
    public static function getInstance(): ReactContextProvider {
        if (!self::$_mod) {
            self::$_mod = new ReactContextProvider();
        }
        return self::$_mod;
    }

    private function __construct() {
    }

    /**
     * @param mixed[] $props
     * @param mixed[] $children
     * @return ?string
     */
    public function render(array $props, array $children) {
        $Ctx2 = new \VK\Elephize\Builtins\ReactContext([
            "testInnerVal" => 2,
        ]);
        return \VK\Elephize\Builtins\ReactContextSynthetic::spawn()
            ->pushContext($Ctx2, [
                "testInnerVal" => 3,
            ])
            ->render([
                \VK\Elephize\Builtins\ReactContextSynthetic::spawn()
                    ->pushContext(\specimens\components\ReactContextSourceModule::getInstance()->Ctx1, [
                        "testVal" => 4,
                    ])
                    ->render([
                        \specimens\components\ReactContextConsumer\ReactContextConsumer::getInstance()->render(
                            ["someprop" => 123, "innerctx" => $Ctx2],
                            []
                        ),
                    ])
                    ->popContext(\specimens\components\ReactContextSourceModule::getInstance()->Ctx1),
            ])
            ->popContext($Ctx2);
    }
}
