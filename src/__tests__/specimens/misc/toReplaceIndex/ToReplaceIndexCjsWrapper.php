<?php
/* NOTICE: autogenerated file; Do not edit by hand */
namespace specimens\misc\toReplaceIndex;
use VK\Elephize\Builtins\Stdlib;
use VK\Elephize\Builtins\CJSModule;
use VK\Elephize\Builtins\ReactContext;
use VK\Elephize\Builtins\ReactContextSynthetic;

class ToReplaceSecondCjsWrapper extends CJSModule {
    /**
     * @var \specimens\ToReplaceSecond $_impl
     */
    private $_impl;

    /**
     * @var ToReplaceSecondCjsWrapper $_mod
     */
    private static $_mod;

    public static function getInstance(): ToReplaceSecondCjsWrapper {
        if (!self::$_mod) {
            self::$_mod = new ToReplaceSecondCjsWrapper();
        }
        return self::$_mod;
    }

    /**
     * @param string $test
     * @return string
     */
    public function getFoo($test, $test2) {
        return $this->_impl->getFoo($test, $test2);
    }

    /**
     * @param string $test
     * @return string
     */
    public function getBar($test) {
        return \specimens\ToReplaceSecond::getBar($test);
    }

    /**
     * @param string $test
     * @param string $test2
     * @return string
     */
    public function getTest1($test, $test2 = "") {
        return $this->_impl->getTest1($test, $test2);
    }

    /**
     * @param string $test
     * @param string $test2
     * @return string
     */
    public function getTest2($test = "", $test2 = "") {
        return $this->_impl->getTest2($test, $test2);
    }

    /**
     * @param string $test
     * @param string $test2
     * @param mixed $args
     * @return string
     */
    public function getTest3($test = "", $test2 = "", ...$args) {
        return $this->_impl->getTest3($test, $test2, ...$args);
    }

    /**
     * @param mixed $args
     * @return string
     */
    public function getTest4($test = "", string $test2, ...$args) {
        return $this->_impl->getTest4($test, $test2, ...$args);
    }

    /**
     * @param mixed $args
     * @return string
     */
    public function getTest5($test = "", string $test2 = "lol", ...$args) {
        return $this->_impl->getTest5($test, $test2, ...$args);
    }

    private function __construct() {
        $this->_impl = new \specimens\ToReplaceSecond();
    }
}
